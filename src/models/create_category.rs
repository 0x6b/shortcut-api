/*
 * Shortcut API
 *
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CreateCategory {
    /// The name of the new Category.
    #[serde(rename = "name")]
    pub name: String,
    /// The hex color to be displayed with the Category (for example, \"#ff0000\").
    #[serde(rename = "color", skip_serializing_if = "Option::is_none")]
    pub color: Option<String>,
    /// This field can be set to another unique ID. In the case that the Category has been imported from another tool, the ID in the other tool can be indicated here.
    #[serde(rename = "external_id", skip_serializing_if = "Option::is_none")]
    pub external_id: Option<String>,
    /// The type of entity this Category is associated with; currently Milestone is the only type of Category.
    #[serde(rename = "type")]
    pub r#type: RHashType,
}

impl CreateCategory {
    pub fn new(name: String, r#type: RHashType) -> CreateCategory {
        CreateCategory {
            name,
            color: None,
            external_id: None,
            r#type,
        }
    }
}

/// The type of entity this Category is associated with; currently Milestone is the only type of Category.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RHashType {
    #[serde(rename = "milestone")]
    Milestone,
}

impl Default for RHashType {
    fn default() -> RHashType {
        Self::Milestone
    }
}

