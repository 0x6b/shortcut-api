/*
 * Shortcut API
 *
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 *
 * Generated by: https://openapi-generator.tech
 */

/// EpicState : Epic State is any of the at least 3 columns. Epic States correspond to one of 3
/// types: Unstarted, Started, or Done.

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct EpicState {
    /// The description of what sort of Epics belong in that Epic State.
    #[serde(rename = "description")]
    pub description: String,
    /// A string description of this resource.
    #[serde(rename = "entity_type")]
    pub entity_type: String,
    /// The hex color for this Epic State.
    #[serde(rename = "color", skip_serializing_if = "Option::is_none")]
    pub color: Option<String>,
    /// The Epic State's name.
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "global_id")]
    pub global_id: String,
    /// The type of Epic State (Unstarted, Started, or Done)
    #[serde(rename = "type")]
    pub r#type: String,
    /// When the Epic State was last updated.
    #[serde(rename = "updated_at")]
    pub updated_at: String,
    /// The unique ID of the Epic State.
    #[serde(rename = "id")]
    pub id: i64,
    /// The position that the Epic State is in, starting with 0 at the left.
    #[serde(rename = "position")]
    pub position: i64,
    /// The time/date the Epic State was created.
    #[serde(rename = "created_at")]
    pub created_at: String,
}

impl EpicState {
    /// Epic State is any of the at least 3 columns. Epic States correspond to one of 3 types:
    /// Unstarted, Started, or Done.
    pub fn new(
        description: String,
        entity_type: String,
        name: String,
        global_id: String,
        r#type: String,
        updated_at: String,
        id: i64,
        position: i64,
        created_at: String,
    ) -> EpicState {
        EpicState {
            description,
            entity_type,
            color: None,
            name,
            global_id,
            r#type,
            updated_at,
            id,
            position,
            created_at,
        }
    }
}
