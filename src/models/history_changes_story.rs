/*
 * Shortcut API
 *
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// HistoryChangesStory : The changes that have occurred as a result of the action.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct HistoryChangesStory {
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<Box<crate::models::StoryHistoryChangeOldNewStr>>,
    #[serde(rename = "archived", skip_serializing_if = "Option::is_none")]
    pub archived: Option<Box<crate::models::StoryHistoryChangeOldNewBool>>,
    #[serde(rename = "started", skip_serializing_if = "Option::is_none")]
    pub started: Option<Box<crate::models::StoryHistoryChangeOldNewBool>>,
    #[serde(rename = "task_ids", skip_serializing_if = "Option::is_none")]
    pub task_ids: Option<Box<crate::models::StoryHistoryChangeAddsRemovesInt>>,
    #[serde(rename = "mention_ids", skip_serializing_if = "Option::is_none")]
    pub mention_ids: Option<Box<crate::models::StoryHistoryChangeAddsRemovesUuid>>,
    #[serde(rename = "story_type", skip_serializing_if = "Option::is_none")]
    pub story_type: Option<Box<crate::models::StoryHistoryChangeOldNewStr>>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<Box<crate::models::StoryHistoryChangeOldNewStr>>,
    #[serde(rename = "completed", skip_serializing_if = "Option::is_none")]
    pub completed: Option<Box<crate::models::StoryHistoryChangeOldNewBool>>,
    #[serde(rename = "blocker", skip_serializing_if = "Option::is_none")]
    pub blocker: Option<Box<crate::models::StoryHistoryChangeOldNewBool>>,
    #[serde(rename = "epic_id", skip_serializing_if = "Option::is_none")]
    pub epic_id: Option<Box<crate::models::StoryHistoryChangeOldNewInt>>,
    #[serde(rename = "branch_ids", skip_serializing_if = "Option::is_none")]
    pub branch_ids: Option<Box<crate::models::StoryHistoryChangeAddsRemovesInt>>,
    #[serde(rename = "commit_ids", skip_serializing_if = "Option::is_none")]
    pub commit_ids: Option<Box<crate::models::StoryHistoryChangeAddsRemovesInt>>,
    #[serde(rename = "requested_by_id", skip_serializing_if = "Option::is_none")]
    pub requested_by_id: Option<Box<crate::models::StoryHistoryChangeOldNewUuid>>,
    #[serde(rename = "iteration_id", skip_serializing_if = "Option::is_none")]
    pub iteration_id: Option<Box<crate::models::StoryHistoryChangeOldNewInt>>,
    #[serde(rename = "label_ids", skip_serializing_if = "Option::is_none")]
    pub label_ids: Option<Box<crate::models::StoryHistoryChangeAddsRemovesInt>>,
    #[serde(rename = "group_id", skip_serializing_if = "Option::is_none")]
    pub group_id: Option<Box<crate::models::StoryHistoryChangeOldNewUuid>>,
    #[serde(rename = "workflow_state_id", skip_serializing_if = "Option::is_none")]
    pub workflow_state_id: Option<Box<crate::models::StoryHistoryChangeOldNewInt>>,
    #[serde(rename = "object_story_link_ids", skip_serializing_if = "Option::is_none")]
    pub object_story_link_ids: Option<Box<crate::models::StoryHistoryChangeAddsRemovesInt>>,
    #[serde(rename = "follower_ids", skip_serializing_if = "Option::is_none")]
    pub follower_ids: Option<Box<crate::models::StoryHistoryChangeAddsRemovesUuid>>,
    #[serde(rename = "owner_ids", skip_serializing_if = "Option::is_none")]
    pub owner_ids: Option<Box<crate::models::StoryHistoryChangeAddsRemovesUuid>>,
    #[serde(rename = "custom_field_value_ids", skip_serializing_if = "Option::is_none")]
    pub custom_field_value_ids: Option<Box<crate::models::StoryHistoryChangeAddsRemovesUuid>>,
    #[serde(rename = "estimate", skip_serializing_if = "Option::is_none")]
    pub estimate: Option<Box<crate::models::StoryHistoryChangeOldNewInt>>,
    #[serde(rename = "subject_story_link_ids", skip_serializing_if = "Option::is_none")]
    pub subject_story_link_ids: Option<Box<crate::models::StoryHistoryChangeAddsRemovesInt>>,
    #[serde(rename = "blocked", skip_serializing_if = "Option::is_none")]
    pub blocked: Option<Box<crate::models::StoryHistoryChangeOldNewBool>>,
    #[serde(rename = "project_id", skip_serializing_if = "Option::is_none")]
    pub project_id: Option<Box<crate::models::StoryHistoryChangeOldNewInt>>,
    #[serde(rename = "deadline", skip_serializing_if = "Option::is_none")]
    pub deadline: Option<Box<crate::models::StoryHistoryChangeOldNewStr>>,
}

impl HistoryChangesStory {
    /// The changes that have occurred as a result of the action.
    pub fn new() -> HistoryChangesStory {
        HistoryChangesStory {
            description: None,
            archived: None,
            started: None,
            task_ids: None,
            mention_ids: None,
            story_type: None,
            name: None,
            completed: None,
            blocker: None,
            epic_id: None,
            branch_ids: None,
            commit_ids: None,
            requested_by_id: None,
            iteration_id: None,
            label_ids: None,
            group_id: None,
            workflow_state_id: None,
            object_story_link_ids: None,
            follower_ids: None,
            owner_ids: None,
            custom_field_value_ids: None,
            estimate: None,
            subject_story_link_ids: None,
            blocked: None,
            project_id: None,
            deadline: None,
        }
    }
}


