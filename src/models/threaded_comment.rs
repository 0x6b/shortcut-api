/*
 * Shortcut API
 *
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 *
 * Generated by: https://openapi-generator.tech
 */

/// ThreadedComment : Comments associated with Epic Discussions.

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ThreadedComment {
    /// The Shortcut application url for the Comment.
    #[serde(rename = "app_url")]
    pub app_url: String,
    /// A string description of this resource.
    #[serde(rename = "entity_type")]
    pub entity_type: String,
    /// True/false boolean indicating whether the Comment is deleted.
    #[serde(rename = "deleted")]
    pub deleted: bool,
    /// Deprecated: use member_mention_ids.
    #[serde(rename = "mention_ids")]
    pub mention_ids: Vec<uuid::Uuid>,
    /// The unique ID of the Member that authored the Comment.
    #[serde(rename = "author_id")]
    pub author_id: uuid::Uuid,
    /// An array of Member IDs that have been mentioned in this Comment.
    #[serde(rename = "member_mention_ids")]
    pub member_mention_ids: Vec<uuid::Uuid>,
    /// A nested array of threaded comments.
    #[serde(rename = "comments")]
    pub comments: Vec<ThreadedComment>,
    /// The time/date the Comment was updated.
    #[serde(rename = "updated_at")]
    pub updated_at: String,
    /// An array of Group IDs that have been mentioned in this Comment.
    #[serde(rename = "group_mention_ids")]
    pub group_mention_ids: Vec<uuid::Uuid>,
    /// This field can be set to another unique ID. In the case that the Comment has been imported
    /// from another tool, the ID in the other tool can be indicated here.
    #[serde(rename = "external_id", deserialize_with = "Option::deserialize")]
    pub external_id: Option<String>,
    /// The unique ID of the Comment.
    #[serde(rename = "id")]
    pub id: i64,
    /// The time/date the Comment was created.
    #[serde(rename = "created_at")]
    pub created_at: String,
    /// The text of the Comment.
    #[serde(rename = "text")]
    pub text: String,
}

impl ThreadedComment {
    /// Comments associated with Epic Discussions.
    pub fn new(
        app_url: String,
        entity_type: String,
        deleted: bool,
        mention_ids: Vec<uuid::Uuid>,
        author_id: uuid::Uuid,
        member_mention_ids: Vec<uuid::Uuid>,
        comments: Vec<ThreadedComment>,
        updated_at: String,
        group_mention_ids: Vec<uuid::Uuid>,
        external_id: Option<String>,
        id: i64,
        created_at: String,
        text: String,
    ) -> ThreadedComment {
        ThreadedComment {
            app_url,
            entity_type,
            deleted,
            mention_ids,
            author_id,
            member_mention_ids,
            comments,
            updated_at,
            group_mention_ids,
            external_id,
            id,
            created_at,
            text,
        }
    }
}
