/*
 * Shortcut API
 *
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// HistoryActionStoryUpdate : An action representing a Story being updated.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct HistoryActionStoryUpdate {
    /// The ID of the entity referenced.
    #[serde(rename = "id")]
    pub id: i64,
    /// The type of entity referenced.
    #[serde(rename = "entity_type")]
    pub entity_type: String,
    /// The action of the entity referenced.
    #[serde(rename = "action")]
    pub action: Action,
    /// The application URL of the Story.
    #[serde(rename = "app_url")]
    pub app_url: String,
    #[serde(rename = "changes", skip_serializing_if = "Option::is_none")]
    pub changes: Option<Box<crate::models::HistoryChangesStory>>,
    /// The name of the Story.
    #[serde(rename = "name")]
    pub name: String,
    /// The type of Story; either feature, bug, or chore.
    #[serde(rename = "story_type")]
    pub story_type: StoryType,
}

impl HistoryActionStoryUpdate {
    /// An action representing a Story being updated.
    pub fn new(id: i64, entity_type: String, action: Action, app_url: String, name: String, story_type: StoryType) -> HistoryActionStoryUpdate {
        HistoryActionStoryUpdate {
            id,
            entity_type,
            action,
            app_url,
            changes: None,
            name,
            story_type,
        }
    }
}

/// The action of the entity referenced.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Action {
    #[serde(rename = "update")]
    Update,
}

impl Default for Action {
    fn default() -> Action {
        Self::Update
    }
}
/// The type of Story; either feature, bug, or chore.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum StoryType {
    #[serde(rename = "feature")]
    Feature,
    #[serde(rename = "chore")]
    Chore,
    #[serde(rename = "bug")]
    Bug,
}

impl Default for StoryType {
    fn default() -> StoryType {
        Self::Feature
    }
}

