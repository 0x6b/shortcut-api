/*
 * Shortcut API
 *
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct UpdateStoryLink {
    /// The type of link.
    #[serde(rename = "verb", skip_serializing_if = "Option::is_none")]
    pub verb: Option<Verb>,
    /// The ID of the subject Story.
    #[serde(rename = "subject_id", skip_serializing_if = "Option::is_none")]
    pub subject_id: Option<i64>,
    /// The ID of the object Story.
    #[serde(rename = "object_id", skip_serializing_if = "Option::is_none")]
    pub object_id: Option<i64>,
}

impl UpdateStoryLink {
    pub fn new() -> UpdateStoryLink {
        UpdateStoryLink {
            verb: None,
            subject_id: None,
            object_id: None,
        }
    }
}

/// The type of link.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Verb {
    #[serde(rename = "blocks")]
    Blocks,
    #[serde(rename = "duplicates")]
    Duplicates,
    #[serde(rename = "relates to")]
    RelatesTo,
}

impl Default for Verb {
    fn default() -> Verb {
        Self::Blocks
    }
}

