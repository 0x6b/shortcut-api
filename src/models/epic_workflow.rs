/*
 * Shortcut API
 *
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// EpicWorkflow : Epic Workflow is the array of defined Epic States. Epic Workflow can be queried using the API but must be updated in the Shortcut UI. 



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct EpicWorkflow {
    /// A string description of this resource.
    #[serde(rename = "entity_type")]
    pub entity_type: String,
    /// The unique ID of the Epic Workflow.
    #[serde(rename = "id")]
    pub id: i64,
    /// The date the Epic Workflow was created.
    #[serde(rename = "created_at")]
    pub created_at: String,
    /// The date the Epic Workflow was updated.
    #[serde(rename = "updated_at")]
    pub updated_at: String,
    /// The unique ID of the default Epic State that new Epics are assigned by default.
    #[serde(rename = "default_epic_state_id")]
    pub default_epic_state_id: i64,
    /// A map of the Epic States in this Epic Workflow.
    #[serde(rename = "epic_states")]
    pub epic_states: Vec<crate::models::EpicState>,
}

impl EpicWorkflow {
    /// Epic Workflow is the array of defined Epic States. Epic Workflow can be queried using the API but must be updated in the Shortcut UI. 
    pub fn new(entity_type: String, id: i64, created_at: String, updated_at: String, default_epic_state_id: i64, epic_states: Vec<crate::models::EpicState>) -> EpicWorkflow {
        EpicWorkflow {
            entity_type,
            id,
            created_at,
            updated_at,
            default_epic_state_id,
            epic_states,
        }
    }
}


