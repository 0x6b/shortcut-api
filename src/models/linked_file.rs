/*
 * Shortcut API
 *
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// LinkedFile : Linked files are stored on a third-party website and linked to one or more Stories. Shortcut currently supports linking files from Google Drive, Dropbox, Box, and by URL.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct LinkedFile {
    /// The description of the file.
    #[serde(rename = "description", deserialize_with = "Option::deserialize")]
    pub description: Option<String>,
    /// A string description of this resource.
    #[serde(rename = "entity_type")]
    pub entity_type: String,
    /// The IDs of the stories this file is attached to.
    #[serde(rename = "story_ids")]
    pub story_ids: Vec<i64>,
    /// Deprecated: use member_mention_ids.
    #[serde(rename = "mention_ids")]
    pub mention_ids: Vec<uuid::Uuid>,
    /// The members that are mentioned in the description of the file.
    #[serde(rename = "member_mention_ids")]
    pub member_mention_ids: Vec<uuid::Uuid>,
    /// The name of the linked file.
    #[serde(rename = "name")]
    pub name: String,
    /// The URL of the file thumbnail, if the integration provided it.
    #[serde(rename = "thumbnail_url", deserialize_with = "Option::deserialize")]
    pub thumbnail_url: Option<String>,
    /// The integration type (e.g. google, dropbox, box).
    #[serde(rename = "type")]
    pub r#type: String,
    /// The filesize, if the integration provided it.
    #[serde(rename = "size", deserialize_with = "Option::deserialize")]
    pub size: Option<i64>,
    /// The UUID of the member that uploaded the file.
    #[serde(rename = "uploader_id")]
    pub uploader_id: uuid::Uuid,
    /// The content type of the image (e.g. txt/plain).
    #[serde(rename = "content_type", deserialize_with = "Option::deserialize")]
    pub content_type: Option<String>,
    /// The time/date the LinkedFile was updated.
    #[serde(rename = "updated_at")]
    pub updated_at: String,
    /// The groups that are mentioned in the description of the file.
    #[serde(rename = "group_mention_ids")]
    pub group_mention_ids: Vec<uuid::Uuid>,
    /// The unique identifier for the file.
    #[serde(rename = "id")]
    pub id: i64,
    /// The URL of the file.
    #[serde(rename = "url")]
    pub url: String,
    /// The time/date the LinkedFile was created.
    #[serde(rename = "created_at")]
    pub created_at: String,
}

impl LinkedFile {
    /// Linked files are stored on a third-party website and linked to one or more Stories. Shortcut currently supports linking files from Google Drive, Dropbox, Box, and by URL.
    pub fn new(description: Option<String>, entity_type: String, story_ids: Vec<i64>, mention_ids: Vec<uuid::Uuid>, member_mention_ids: Vec<uuid::Uuid>, name: String, thumbnail_url: Option<String>, r#type: String, size: Option<i64>, uploader_id: uuid::Uuid, content_type: Option<String>, updated_at: String, group_mention_ids: Vec<uuid::Uuid>, id: i64, url: String, created_at: String) -> LinkedFile {
        LinkedFile {
            description,
            entity_type,
            story_ids,
            mention_ids,
            member_mention_ids,
            name,
            thumbnail_url,
            r#type,
            size,
            uploader_id,
            content_type,
            updated_at,
            group_mention_ids,
            id,
            url,
            created_at,
        }
    }
}


