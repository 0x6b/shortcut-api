/*
 * Shortcut API
 *
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 *
 * Generated by: https://openapi-generator.tech
 */

/// HistoryChangesTask : The changes that have occurred as a result of the action.

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct HistoryChangesTask {
    #[serde(rename = "complete", skip_serializing_if = "Option::is_none")]
    pub complete: Option<Box<crate::models::StoryHistoryChangeOldNewBool>>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<Box<crate::models::StoryHistoryChangeOldNewStr>>,
    #[serde(rename = "mention_ids", skip_serializing_if = "Option::is_none")]
    pub mention_ids: Option<Box<crate::models::StoryHistoryChangeAddsRemovesUuid>>,
    #[serde(rename = "owner_ids", skip_serializing_if = "Option::is_none")]
    pub owner_ids: Option<Box<crate::models::StoryHistoryChangeAddsRemovesUuid>>,
}

impl HistoryChangesTask {
    /// The changes that have occurred as a result of the action.
    pub fn new() -> HistoryChangesTask {
        HistoryChangesTask {
            complete: None,
            description: None,
            mention_ids: None,
            owner_ids: None,
        }
    }
}
