/*
 * Shortcut API
 *
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 *
 * Generated by: https://openapi-generator.tech
 */

/// HistoryActionLabelDelete : An action representing a Label being deleted.

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct HistoryActionLabelDelete {
    /// The ID of the entity referenced.
    #[serde(rename = "id")]
    pub id: i64,
    /// The type of entity referenced.
    #[serde(rename = "entity_type")]
    pub entity_type: String,
    /// The action of the entity referenced.
    #[serde(rename = "action")]
    pub action: Action,
    /// The name of the Label.
    #[serde(rename = "name")]
    pub name: String,
}

impl HistoryActionLabelDelete {
    /// An action representing a Label being deleted.
    pub fn new(
        id: i64,
        entity_type: String,
        action: Action,
        name: String,
    ) -> HistoryActionLabelDelete {
        HistoryActionLabelDelete { id, entity_type, action, name }
    }
}

/// The action of the entity referenced.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Action {
    #[serde(rename = "delete")]
    Delete,
}

impl Default for Action {
    fn default() -> Action {
        Self::Delete
    }
}
