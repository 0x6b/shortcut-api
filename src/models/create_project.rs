/*
 * Shortcut API
 *
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CreateProject {
    /// The Project description.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// The color you wish to use for the Project in the system.
    #[serde(rename = "color", skip_serializing_if = "Option::is_none")]
    pub color: Option<String>,
    /// The name of the Project.
    #[serde(rename = "name")]
    pub name: String,
    /// The date at which the Project was started.
    #[serde(rename = "start_time", skip_serializing_if = "Option::is_none")]
    pub start_time: Option<String>,
    /// Defaults to the time/date it is created but can be set to reflect another date.
    #[serde(rename = "updated_at", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<String>,
    /// An array of UUIDs for any members you want to add as Owners on this new Epic.
    #[serde(rename = "follower_ids", skip_serializing_if = "Option::is_none")]
    pub follower_ids: Option<Vec<uuid::Uuid>>,
    /// This field can be set to another unique ID. In the case that the Project has been imported
    /// from another tool, the ID in the other tool can be indicated here.
    #[serde(rename = "external_id", skip_serializing_if = "Option::is_none")]
    pub external_id: Option<String>,
    /// The ID of the team the project belongs to.
    #[serde(rename = "team_id")]
    pub team_id: i64,
    /// The number of weeks per iteration in this Project.
    #[serde(rename = "iteration_length", skip_serializing_if = "Option::is_none")]
    pub iteration_length: Option<i64>,
    /// The Project abbreviation used in Story summaries. Should be kept to 3 characters at most.
    #[serde(rename = "abbreviation", skip_serializing_if = "Option::is_none")]
    pub abbreviation: Option<String>,
    /// Defaults to the time/date it is created but can be set to reflect another date.
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
}

impl CreateProject {
    pub fn new(name: String, team_id: i64) -> CreateProject {
        CreateProject {
            description: None,
            color: None,
            name,
            start_time: None,
            updated_at: None,
            follower_ids: None,
            external_id: None,
            team_id,
            iteration_length: None,
            abbreviation: None,
            created_at: None,
        }
    }
}
