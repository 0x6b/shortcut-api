/*
 * Shortcut API
 *
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct UpdateLinkedFile {
    /// The description of the file.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// The ID of the linked story.
    #[serde(rename = "story_id", skip_serializing_if = "Option::is_none")]
    pub story_id: Option<i64>,
    /// The name of the file.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The URL of the thumbnail, if the integration provided it.
    #[serde(rename = "thumbnail_url", skip_serializing_if = "Option::is_none")]
    pub thumbnail_url: Option<String>,
    /// The integration type of the file (e.g. google, dropbox, box).
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<RHashType>,
    /// The filesize, if the integration provided it.
    #[serde(rename = "size", skip_serializing_if = "Option::is_none")]
    pub size: Option<i64>,
    /// The UUID of the member that uploaded the file.
    #[serde(rename = "uploader_id", skip_serializing_if = "Option::is_none")]
    pub uploader_id: Option<uuid::Uuid>,
    /// The URL of linked file.
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
}

impl UpdateLinkedFile {
    pub fn new() -> UpdateLinkedFile {
        UpdateLinkedFile {
            description: None,
            story_id: None,
            name: None,
            thumbnail_url: None,
            r#type: None,
            size: None,
            uploader_id: None,
            url: None,
        }
    }
}

/// The integration type of the file (e.g. google, dropbox, box).
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RHashType {
    #[serde(rename = "google")]
    Google,
    #[serde(rename = "url")]
    Url,
    #[serde(rename = "dropbox")]
    Dropbox,
    #[serde(rename = "box")]
    Box,
    #[serde(rename = "onedrive")]
    Onedrive,
}

impl Default for RHashType {
    fn default() -> RHashType {
        Self::Google
    }
}

