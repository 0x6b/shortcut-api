/*
 * Shortcut API
 *
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// Repository : Repository refers to a VCS repository.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Repository {
    /// A string description of this resource.
    #[serde(rename = "entity_type")]
    pub entity_type: String,
    /// The shorthand name of the VCS repository.
    #[serde(rename = "name", deserialize_with = "Option::deserialize")]
    pub name: Option<String>,
    /// The type of Repository. Currently this can only be \"github\".
    #[serde(rename = "type")]
    pub r#type: String,
    /// The time/date the Repository was updated.
    #[serde(rename = "updated_at", deserialize_with = "Option::deserialize")]
    pub updated_at: Option<String>,
    /// The VCS unique identifier for the Repository.
    #[serde(rename = "external_id", deserialize_with = "Option::deserialize")]
    pub external_id: Option<String>,
    /// The ID associated to the VCS repository in Shortcut.
    #[serde(rename = "id", deserialize_with = "Option::deserialize")]
    pub id: Option<i64>,
    /// The URL of the Repository.
    #[serde(rename = "url", deserialize_with = "Option::deserialize")]
    pub url: Option<String>,
    /// The full name of the VCS repository.
    #[serde(rename = "full_name", deserialize_with = "Option::deserialize")]
    pub full_name: Option<String>,
    /// The time/date the Repository was created.
    #[serde(rename = "created_at", deserialize_with = "Option::deserialize")]
    pub created_at: Option<String>,
}

impl Repository {
    /// Repository refers to a VCS repository.
    pub fn new(entity_type: String, name: Option<String>, r#type: String, updated_at: Option<String>, external_id: Option<String>, id: Option<i64>, url: Option<String>, full_name: Option<String>, created_at: Option<String>) -> Repository {
        Repository {
            entity_type,
            name,
            r#type,
            updated_at,
            external_id,
            id,
            url,
            full_name,
            created_at,
        }
    }
}


