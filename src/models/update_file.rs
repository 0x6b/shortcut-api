/*
 * Shortcut API
 *
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct UpdateFile {
    /// The description of the file.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// The time/date that the file was uploaded.
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    /// The time/date that the file was last updated.
    #[serde(rename = "updated_at", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<String>,
    /// The name of the file.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The unique ID assigned to the Member who uploaded the file to Shortcut.
    #[serde(rename = "uploader_id", skip_serializing_if = "Option::is_none")]
    pub uploader_id: Option<uuid::Uuid>,
    /// An additional ID that you may wish to assign to the file.
    #[serde(rename = "external_id", skip_serializing_if = "Option::is_none")]
    pub external_id: Option<String>,
}

impl UpdateFile {
    pub fn new() -> UpdateFile {
        UpdateFile {
            description: None,
            created_at: None,
            updated_at: None,
            name: None,
            uploader_id: None,
            external_id: None,
        }
    }
}
